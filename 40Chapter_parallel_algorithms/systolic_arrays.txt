Dr. Hsiang-Tsung Kung in 1978 showed that arrays of such processors (there a lot more need but this is more important need to know) which he termed "systolic arrays", allow very efficient use of the processors for some fundamental problems.

	As typical application, we'll consider the use of systolic arrays for matrix vertor mulitiplication. Imagine a matrix 2^n by 2^n is kept in a row major order. The computation will be carried out on a row of simple processors each of which has three input lines and two output lines. ( There is much more to his work please before using another sort function read up on his method)

	During each step, each processor reads one input from the left, one from the top and one from the right; performs a simple computation; and writes one output to the left and one output to the right. specifically, the right output gets whatever was on the left input, and the left output gets the result computed by multiplying together the left and top inputs and adding the right input. A crucial characteristic of the processors is that they always perform a dynamic transformation of inputs to outputs; they never have to "remember" compute values. This is a ground rule imposed by low-level constraints on the hardware design, since the addition of such a "memory" capability can be quite expensive. 
